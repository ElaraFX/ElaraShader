// -------------for mtoer.xml------------------------------
// <maya_layeredTexture>
	// <maya.name type="STRING">layeredTexture</maya.name>
// </maya_layeredTexture>

#include "mayautil.h"
#define LAYEREDTEXTURE_MAX_LAYERS 16
#define cabs(a) abs(a)

shader maya_layeredTexture(
	// Inputs
				color	i_array_inputs_color[LAYEREDTEXTURE_MAX_LAYERS]		= {color(0.2,0.7,0.3), color(1.0,0.0,0.0), color(0.0) },
				float	i_array_inputs_alpha[LAYEREDTEXTURE_MAX_LAYERS]		= {0.5, 1.0, 1.0},
	/*uniform*/	int		i_array_inputs_blendMode[LAYEREDTEXTURE_MAX_LAYERS]	= {1,1,0},
	/*uniform*/	int		i_array_inputs_isVisible[LAYEREDTEXTURE_MAX_LAYERS]	= {1,1,0},
				int		i_alphaIsLuminance									= 0,

	// Outputs
	output		color	o_outColor											= 0.0,
	output		float	o_outAlpha											= 0.0,
	output		color	o_outTransparency									= 0.0
	)
{
	int numLayers = arraylength( i_array_inputs_color );
	int i;
	
	o_outColor = 0;
	o_outAlpha = 0;

	for( i = numLayers - 1; i >= 0; i -= 1 )
	{
		if( i_array_inputs_isVisible[i] != 1.0 )
			continue;

		color fc = i_array_inputs_color[i];
		float fa = i_array_inputs_alpha[i];
		float blend = i_array_inputs_blendMode[i];

		if( blend == 0.0 ) /* None */
		{
			o_outColor = fc;
			o_outAlpha = fa;
		}
		else if( blend == 1.0 ) /* Over */
		{
			o_outColor = fc * fa + (o_outColor * (1 - fa));
			o_outAlpha = 1 - ((1 - o_outAlpha) * (1 - fa));
		}
		else if( blend == 2.0 ) /* In */
		{
			o_outColor *= fa;
			o_outAlpha *= fa;
		}
		else if( blend == 3.0 ) /* Out */
		{
			o_outColor *= (1 - fa);
			o_outAlpha *= (1 - fa);
		}
		else if( blend == 4.0 ) /* Add */
		{
			o_outColor += fc * fa;
		}
		else if( blend == 5.0 ) /* Subtract */
		{
			o_outColor -= fc * fa;
		}
		else if( blend == 6.0 ) /* Multiply */
		{
			o_outColor *= (fc * fa + 1 - fa);
		}
		else if( blend == 7.0 ) /* Difference */
		{
			o_outColor = (cabs((fc * fa) - o_outColor)) * fa + o_outColor * (1 - fa);
		}
		else if( blend == 8.0 ) /* Lighten */
		{
			o_outColor = (max((fc * fa), o_outColor)) * fa + o_outColor * (1 - fa);
		}
		else if( blend == 9.0 ) /* Darken */
		{
			o_outColor = (min((fc * fa), o_outColor)) * fa + o_outColor * (1 - fa);
		}
		else if( blend == 10.0 ) /* Saturate */
		{
			o_outColor *= (1 + (fc * fa));
		}
		else if( blend == 11.0 ) /* Desaturate */
		{
			o_outColor *= (1 - (fc * fa));
		}
		else /* 12.0 : Illuminate */
		{
			o_outColor *= (2 * fc * fa + 1 - fa);
		}
	}

	if( i_alphaIsLuminance != 0.0 )
	{
		o_outAlpha = luminance( o_outColor );
	}

	o_outTransparency = color( 1.0 - o_outAlpha );
}


